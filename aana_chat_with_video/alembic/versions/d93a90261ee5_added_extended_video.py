"""added extended video.

Revision ID: d93a90261ee5
Revises: 5ad873484aa3
Create Date: 2024-07-29 12:41:04.976640

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'd93a90261ee5'
down_revision: str | None = '5ad873484aa3'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade database to this revision from previous."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('extended_video',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True, comment='Video duration in seconds'),
    sa.Column('status', sa.Enum('CREATED', 'RUNNING', 'COMPLETED', 'FAILED', name='videoprocessingstatus'), nullable=False, comment='Processing status'),
    sa.ForeignKeyConstraint(['id'], ['video.id'], name=op.f('fk_extended_video_id_video')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_extended_video'))
    )
    op.create_table('extended_video_caption',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.String(length=36), nullable=False, comment='Foreign key to video table'),
    sa.ForeignKeyConstraint(['id'], ['caption.id'], name=op.f('fk_extended_video_caption_id_caption')),
    sa.ForeignKeyConstraint(['media_id'], ['extended_video.id'], name=op.f('fk_extended_video_caption_media_id_extended_video')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_extended_video_caption'))
    )
    op.create_table('extended_video_transcript',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('media_id', sa.String(length=36), nullable=False, comment='Foreign key to video table'),
    sa.ForeignKeyConstraint(['id'], ['transcript.id'], name=op.f('fk_extended_video_transcript_id_transcript')),
    sa.ForeignKeyConstraint(['media_id'], ['extended_video.id'], name=op.f('fk_extended_video_transcript_media_id_extended_video')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_extended_video_transcript'))
    )
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.NUMERIC(),
               type_=sa.UUID(),
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database from this revision to previous."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.UUID(),
               type_=sa.NUMERIC(),
               existing_nullable=False)

    op.drop_table('extended_video_transcript')
    op.drop_table('extended_video_caption')
    op.drop_table('extended_video')
    # ### end Alembic commands ###
